    public class AuthFilter implements Filter
/**
 * - @WebFilter(urlPatterns = "*.do")
 * Filter
 *
 * на страницу posts.do может переходить только авторизованный пользователь.
 *  мы будем фильтровать все запросы.
 * Если запрос не связан с пользователем, то будем перенаправлять такой запрос на страницу авторизации.
 * Чтобы этого добиться в Java используется javax.servlet.Filter интерфейс.
 * Так же вспомните принцип единой ответственности SRP.
 * Фильтр должен выполнять задачи для одной группы пользователей.
 * Все запросы с расширением *.do будут обрабатываться нашим фильтром.
 * В AuthFilter добавьте игнорировние сервлета reg.do.
 * <filter-mapping>
 * <filter-name>AuthFilter</filter-name>
 * <url-pattern>*.do</url-pattern>В url-pattern можно указать полный путь или маску поиска.
 * </filter-mapping>
 * полный путь или маску поиска * - все запросы.
 * Здесь используется маска *.do. *.do - это дань старому фреймворку Struts.
 */

 public class Car
 /**
  * Модель данных описывающая Автомобиль
  * Реализовать площадку продаж машин. [#4747]
  * Уровень : 3. МидлКатегория : 3.3. HibernateТопик : 3.3.2. Mapping
  * - Спроектируйте SQL схему для сайта по продажам машин.
  * - Добавьте POJO классы и hibernate mapping. В этом задании нужно использовать аннотации.
  * - Загрузите схему в корень репозитория в папку db.
  *
  * @author SlartiBartFast-art
  * @version 01
  * @since 22.11.21
  */


 public class Photo
  /**
  * Модель данных изображения для объявления(Post)
  * Реализовать площадку продаж машин. [#4747]
  * Уровень : 3. МидлКатегория : 3.3. HibernateТопик : 3.3.2. Mapping
  * - Спроектируйте SQL схему для сайта по продажам машин.
  * - Добавьте POJO классы и hibernate mapping. В этом задании нужно использовать аннотации.
  * - Загрузите схему в корень репозитория в папку db.
  * @author SlartiBartFast-art
  * @version 01
  * @since 24.11.21
  */

  public class Post
  /**
   * Модель данных описывающая объявление(Post)
   * Реализовать площадку продаж машин. [#4747]
   * Уровень : 3. МидлКатегория : 3.3. HibernateТопик : 3.3.2. Mapping
   * - Спроектируйте SQL схему для сайта по продажам машин.
   * - Добавьте POJO классы и hibernate mapping. В этом задании нужно использовать аннотации.
   * - Загрузите схему в корень репозитория в папку db.
   *
   * @author SlartiBartFast-art
   * @version 01
   * @since 22.11.21
   */

   public class User
   /**
    * Модель данных описывает пользователя/владельца объявления(Post)
    * Реализовать площадку продаж машин. [#4747]
    * Уровень : 3. МидлКатегория : 3.3. HibernateТопик : 3.3.2. Mapping
    * - Спроектируйте SQL схему для сайта по продажам машин.
    * - Добавьте POJO классы и hibernate mapping. В этом задании нужно использовать аннотации.
    * - Загрузите схему в корень репозитория в папку db.
    *
    * @author SlartiBartFast-art
    * @version 01
    * @since 22.11.21
    */


    public class DownloadServlet extends HttpServlet
     /**
         * - @WebServlet(urlPatterns = "/download")
         * 1. Загрузка и скачивание файла.
         * Это servlet будет отдавать файл, который лежит на сервере.
         * ознакомеление с возможностью servlet загружать файлы на сервер и отдавать их клиенту.
         * Http протокол позволяет передавать файлы между клиентом и сервером.
         * - @WebServlet(urlPattern = " маппинг имя")
         *
         * @author SlartiBartFast-art
         */